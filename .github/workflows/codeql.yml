# This workflow builds a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven + CodeQL analysis

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  schedule:
    - cron: '42 1 * * 2'

jobs:
  build:
    name: build and analyse
    runs-on: ubuntu-latest  
    # Runner size impacts CodeQL analysis time. To learn more, please see:
    #   - https://gh.io/recommended-hardware-resources-for-running-codeql
    #   - https://gh.io/supported-runners-and-hardware-resources
    #   - https://gh.io/using-larger-runners
    # Consider using larger runners for possible analysis time improvements.
    timeout-minutes: 360
    permissions:
      actions: write
      contents: write
      security-events: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up with Java 21
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: 21
        cache: 'maven'

    - name: Initialize CodeQL for security scanning
      uses: github/codeql-action/init@v3
      with:
        languages: 'java-kotlin'
        # CodeQL supports [ 'c-cpp', 'csharp', 'go', 'java-kotlin', 'javascript-typescript', 'python', 'ruby', 'swift' ]
        # Use only 'java-kotlin' to analyze code written in Java, Kotlin or both
        # Learn more about CodeQL language support at https://aka.ms/codeql-docs/language-support
        #
        # If you wish to specify custom queries, you can do so here or in a config file.
        # By default, queries listed here will override any specified in a config file.
        # Prefix the list here with "+" to use these queries and those in the config file.
        #
        # For more details on CodeQL's query packs, refer to: https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#using-queries-in-ql-packs
        # queries: security-extended,security-and-quality
        
    - name: Build with Maven (including running of all tests)
      run: mvn -B package --file pom.xml

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3
      with:
        category: "/language:java-kotlin"
        
    - name: Publish Test Report
      if: ${{ always() }}
      uses: scacap/action-surefire-report@v1
      
    - name: Generate JaCoCo Badge
      id: jacoco
      uses: cicirello/jacoco-badge-generator@v2
      with:
        generate-coverage-badge: true
        generate-branches-badge: true
        generate-summary: true
        
    - name: Log coverage percentage
      run: |
        echo "coverage = ${{ steps.jacoco.outputs.coverage }}"
        echo "branch coverage = ${{ steps.jacoco.outputs.branches }}"
        
    - name: Commit and push the svg badges and the json coverage summary (if it changed)
      uses: EndBug/add-and-commit@v9
      with:
        default_author: github_actions
        message: 'commit coverage badge and summary'
        add: '*.svg *.json'
        
    - name: Upload JaCoCo coverage report
      uses: actions/upload-artifact@v4
      with:
        name: jacoco-report
        path: target/site/jacoco/
        
    - name: Comment on PR with coverage percentages
      if: ${{ github.event_name == 'pull_request' }}
      run: |
        REPORT=$(<.github/badges/coverage-summary.json)
        COVERAGE=$(jq -r '.coverage' <<< "$REPORT")%
        BRANCHES=$(jq -r '.branches' <<< "$REPORT")%
        NEWLINE=$'\n'
        BODY="## Test Coverage Summary ${NEWLINE}* __Coverage:__ ${COVERAGE}${NEWLINE}* __Branches:__ ${BRANCHES}"
        gh pr comment ${{github.event.pull_request.number}} -b "${BODY}"
      continue-on-error: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}



